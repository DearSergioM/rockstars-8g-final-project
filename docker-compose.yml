version: '3'
services:
  postgres_db38:
    image: postgres:14-alpine
    container_name: "postgres38"
    environment:
      - "POSTGRES_PASSWORD=${PSQL_PASS}"
      - "POSTGRES_DB=${PSQL_DB}"
      - "POSTGRES_USER=${PSQL_USER}"
    ports:
      - "10038:5538"
    volumes:
      - "${POSTGRES_VOLUME_PATH}:/usr/src/postgres"
    networks:
      - our-library-net
    command: "-p 5538"

  web38:
    build: .
    image: my-django-image38:2.0.0
    # PUEDES QUITAR EL PYTEST EN CASO DE QUE FALLE LAS PRUEBAS
    command: bash -c "python manage.py makemigrations && python manage.py migrate && pytest && python manage.py runserver 0.0.0.0:8038"
    container_name: "django38"
    depends_on: 
      - postgres_db38
    environment:
      - "PSQL_DBNAME=${PSQL_DB}"
      - "PSQL_USERNAME=${PSQL_USER}"
      - "PSQL_PASS=${PSQL_PASS}"
      - "PSQL_HOST=postgres_db38" # You must use the previous command in order to get this HOST
      - "PSQL_PORT=5538"
      - "JWT_TOKEN_TIME=${JWT_TOKEN_TIME}"
    volumes:
    # "RUTA/DEL/SERVIDOR:RUTA/DENTRO/DEL/CONTENEDOR"
      - "${DJANGO_VOLUME_PATH}:/usr/src/django/library"
    ports:
      - "9038:8038"
    networks:
      - our-library-net

  front38:
    build:
      dockerfile: dockerfile
      context: ./frontend
    command: sh -c "npm install && npm run start"
    container_name: "react${PORT}"
    volumes:
      - "${REACT_VOLUME_PATH}:/app"
    ports:
      - "110${PORT}:110${PORT}"
    networks:
      - our-library-net

networks:
  our-library-net:
    external: true
    driver: bridge